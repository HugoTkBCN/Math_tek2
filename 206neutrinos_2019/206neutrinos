#!/usr/bin/env python3

import sys, os, math
from sys import stdin
import math

def print_usage():
    print("USAGE")
    print("\t./206neutrinos n a h sd\n")
    print("DESCRIPTION")
    print("\tn number of values")
    print("\ta arithmetic mean")
    print("\th harmonic mean")
    print("\tsd standard deviation")

def check_error(ac):
    av = []
    try:
        for i in range(1, ac) :
            av.append(int(sys.argv[i]))
            if (av[i - 1] < 0):
                sys.exit(84)
    except:
        print_usage()
        exit(84)
    return (av)

def output(av, mean_square):
    print ("    Number of values:\t%d" % av[0])
    print ("    Standard deviation:\t%.2f" % av[3])
    print ("    Arithmetic mean:\t%.2f" % av[1])
    print ("    Root mean square:\t%.2f" % mean_square)
    print ("    Harmonic mean:\t%.2f\n" % av[2])

def check(input):
    if input == "END":
        exit(0)
    try:
        float_input = float(input)
        if float_input < 0:
            exit(84)
    except:
        exit(84)
    return (float_input)

# av[0] = nbr_values
# av[1] = a
# av[2] = h
# av[3] = sd

def calc(av, input):
    total = av[1] * av[0]
    temp = (av[3] * av[3] + av[1] * av[1]) * av[0]
    av[0] = av[0] + 1
    av[1] = (total + input) / av[0]
    av[3] = math.sqrt(((temp + math.pow(input, 2)) / av[0]) - math.pow(av[1], 2))
    av[2] = av[0] / ((1 / input) + ((av[0] - 1) / av[2]))
    return (av)

def run(av):
    running = True
    while (running):
        try:
            input_val = input("Enter next value: ")
            float_input_val = check(input_val)
            tmp = (av[3] * av[3] + av[1] * av[1]) * av[0]
            calc(av, float_input_val)
            mean_square = math.sqrt((tmp + math.pow(float_input_val, 2)) / av[0])
            output(av, mean_square)
        except EOFError:
            running = False


def main(ac):
    if (ac == 5):
        av = check_error(ac)
        if av[2] == 0 or av[2] < 0:
            return (84)
        run(av)
    elif (ac == 2):
        if (sys.argv[1] == '-h'):
            print_usage()
        else:
            return (84)
    else:
        return (84)
    return (0)

ac = len(sys.argv)
exit(main(ac))
